"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9854],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1560:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const o={sidebar_position:4,id:"Miscellaneous Code",title:"Miscellaneous Code",tags:["template"]},a="Random snippets of useful code",l={unversionedId:"Code Snippets/Miscellaneous Code",id:"Code Snippets/Miscellaneous Code",title:"Miscellaneous Code",description:"Direct Send to email",source:"@site/docs/Code Snippets/Miscellaneous.md",sourceDirName:"Code Snippets",slug:"/Code Snippets/Miscellaneous Code",permalink:"/Code Snippets/Miscellaneous Code",draft:!1,tags:[{label:"template",permalink:"/tags/template"}],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,id:"Miscellaneous Code",title:"Miscellaneous Code",tags:["template"]},sidebar:"tutorialSidebar",previous:{title:"Exchange Online",permalink:"/Code Snippets/Exchange Online"},next:{title:"OnPrem Active Directory",permalink:"/Code Snippets/OnPrem Active Directory"}},s={},c=[{value:"Direct Send to email",id:"direct-send-to-email",level:2},{value:"Store encrypted credentials",id:"store-encrypted-credentials",level:2},{value:"Remove-Variable",id:"remove-variable",level:2}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"random-snippets-of-useful-code"},"Random snippets of useful code"),(0,i.kt)("h2",{id:"direct-send-to-email"},"Direct Send to email"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-powershell"},"# Get the credential\n$credential = Get-Credential\n\n## Define the Send-MailMessage parameters\n$mailParams = @{\n    SmtpServer                 = 'smtp.office365.com'\n    Port                       = '587' # or '25' if not using TLS\n    UseSSL                     = $true ## or not if using non-TLS\n    Credential                 = $credential\n    From                       = 'Email.Address@domain.com'\n    To                         = 'Email.Address@domain.com'# , 'recipient@NotYourDomain.com'\n    Subject                    = \"SMTP Client Submission - $(Get-Date -Format g)\"\n    Body                       = 'This is a test email using SMTP Client Submission'\n    Attachment                 = \"$env:USERPROFILE\\Desktop\\TRA-Backup-Job-Report.csv\"\n    DeliveryNotificationOption = 'OnFailure', 'OnSuccess'\n}\n\n## Send the message\nSend-MailMessage @mailParams\n")),(0,i.kt)("h2",{id:"store-encrypted-credentials"},"Store encrypted credentials"),(0,i.kt)("p",null,"Try the section above in conjuction with this to store the credentials for the account that is sending the email."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-powershell"},'<# Set and encrypt credentials to file using default method #>\n\n$credential = Get-Credential\n$credential.Password | ConvertFrom-SecureString | Set-Content "C:\\temp\\Reporting\\encrypted_password_for_reporting.txt"\n\n<# Decrypting it and using it in a script#>\n\n# Get the credential\n$emailusername = "email.address@domain.com"\n$encrypted = Get-Content "C:\\temp\\encrypted_password_for_reporting.txt" | ConvertTo-SecureString\n$credential = New-Object System.Management.Automation.PsCredential($emailusername, $encrypted)\n')),(0,i.kt)("h2",{id:"remove-variable"},"Remove-Variable"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-powershell"},"Remove-Variable * -ErrorAction SilentlyContinue\n")))}d.isMDXComponent=!0}}]);